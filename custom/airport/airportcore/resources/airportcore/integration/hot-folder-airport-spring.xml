<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:file="http://www.springframework.org/schema/integration/file"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/integration 
	http://www.springframework.org/schema/integration/spring-integration.xsd
	http://www.springframework.org/schema/integration/file 
	http://www.springframework.org/schema/integration/file/spring-integration-file.xsd
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd">

    <context:annotation-config/> 

	<bean id="baseDirectoryAirport" class="java.lang.String">
		<constructor-arg value="#{baseDirectory}/${tenantId}/airport" />
	</bean>
	
	<!-- 1) Scan for files -->
	<file:inbound-channel-adapter id="batchFilesAirport" directory="#{baseDirectoryAirport}"
		filename-regex="^(.*)-(\d+)\.csv" comparator="fileOrderComparator">
		<int:poller fixed-rate="1000" />
	</file:inbound-channel-adapter>
	
	
	<!-- Move the file to processing and start the flow -->
	<file:outbound-gateway request-channel="batchFilesAirport" reply-channel="batchFilesAirportProc"
						   directory="#{baseDirectoryAirport}/processing"
						   delete-source-files="true" />
						   
	<!-- Initialize the batch header with relevant information -->
	<int:service-activator input-channel="batchFilesAirportProc" output-channel="batchFilesHeaderInit"
						   ref="airportHeaderSetupTask"
						   method="execute" />
						   
						   
	<bean id="airportHeaderSetupTask" class="de.hybris.platform.acceleratorservices.dataimport.batch.task.HeaderSetupTask">
		<property name="catalog" value="airportCatalog" />
		<property name="net" value="false" />
		<property name="storeBaseDirectory" ref="baseDirectoryAirport" />
	</bean>		
	
	<!-- 3) transform csv to impex file -->
	<int:service-activator input-channel="batchFilesHeader" output-channel="batchFilesTran" ref="batchTransformerTask"
		method="execute" />
	<bean id="batchTransformerTask" 
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.task.ImpexTransformerTask" 
		  init-method="initConvertersMap">
		<property name="fieldSeparator" value=";" />
		<property name="encoding" value="UTF-8" />
		<property name="linesToSkip" value="0"/>
		<property name="cleanupHelper" ref="cleanupHelper" />
	</bean>		   


	<!-- ________________________________________________CONVERTER___________________________________________________ -->
	
	<!-- AirportModel impex converter -->
	<bean id="airportConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				#{defaultImpexProductHeader}
				INSERT_UPDATE Airport; codeIATA[unique=true]; name; city[lang=$lang]; country[lang=$lang]; runways
			</value>
		</property>
		<property name="impexRow">
			<value>;{+0};{1};{2};{3};{4}</value>
		</property>
	</bean>
	
	<!-- PlaneModel impex converter -->
	<bean id="planeConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				#{defaultImpexProductHeader}
				INSERT_UPDATE Plane; codePlane[unique=true];model(code);statePlane(code); numberMaxSits; goods;airline(codeAirLine)
			</value>
		</property>
		<property name="impexRow">
			<value>;{+0};{1};{2};{3};{4};{5}</value>
		</property>
		
	</bean>
	
	<!-- AirlineModel impex converter -->
	<bean id="airlineConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				#{defaultImpexProductHeader}
				INSERT_UPDATE AirLine; codeAirLine[unique=true]; name[unique=true]
			</value>
		</property>
		<property name="impexRow">
			<value>;{+0};{+1}</value>
		</property>
	</bean>
	
	<!-- RouteModel impex converter -->
	<bean id="routeConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				#{defaultImpexProductHeader}
				INSERT_UPDATE Route; codeRoute[unique=true];airportDeparture(codeIATA);airportArrival(codeIATA);routeTime
			</value>
		</property>
		<property name="impexRow">
			<value>;{+0};{1};{2};{3}</value>
		</property>
		<property name="rowFilter">
			<bean class="it.uiip.airport.core.impexFilterRow.RouteImpexRowFilter">
				<property name="airportService" ref="airportService"/>
			</bean>
		</property>
	</bean>
	
	<!-- FlightModel impex converter -->
	<bean id="flightConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				#{defaultImpexProductHeader}
				INSERT_UPDATE Flight; codeFlight[unique=true];route(codeRoute);scheduleTimeDeparture[dateformat = dd.MM.yyyy HH.mm, unique=true, allownull=true];actualTimeDeparture[dateformat = dd.MM.yyyy HH:mm, allownull=true];stateFlight(code);delay;plane(codePlane)
			</value>
		</property>
		<property name="impexRow">
			<value>;{+0};{1};{2};{3};{4};{5};{6}</value>
		</property>
	</bean>
	
	<!-- PassengerModel impex converter -->
	<bean id="passengerConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				#{defaultImpexProductHeader}
				INSERT_UPDATE Passenger; uid[unique=true];fiscalCode[unique=true];name;birthday[dateformat = dd.MM.yyyy,allownull=true];sex(code);nationality
			</value>
		</property>
		<property name="impexRow">
			<value>;{+0};{+1};{2};{3};{4};{5}</value>
		</property>
	</bean>
	
	<!-- BookingPassengerModel impex converter -->
	<bean id="bookingConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				#{defaultImpexProductHeader}
				INSERT_UPDATE Booking ; passenger(fiscalCode); flight(codeFlight,scheduleTimeDeparture[dateformat = dd.MM.yyyy HH.mm])[unique=true]; sit[unique=true]; bookingDate[dateformat = dd.MM.yyyy, allownull=true]
			</value>
		</property>
		<property name="impexRow">
			<value>;{0};{+1};{2};{3}</value>
		</property>
	</bean>
	
	
	<!-- ________________________________________________MAPPING___________________________________________________ -->
	
	<!-- AirportModel impex converter mapping to airport prefix -->
	<bean id="airportConverterMapping"
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		  p:mapping="airport"
		  p:converter-ref="airportConverter"/>
		  
	<!-- PlaneModel impex converter mapping to plane prefix -->
	<bean id="planeConverterMapping"
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		  p:mapping="plane"
		  p:converter-ref="planeConverter"/>
		  
	<!-- AirlineModel impex converter mapping to airline prefix -->
	<bean id="airlineConverterMapping"
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		  p:mapping="airline"
		  p:converter-ref="airlineConverter"/>
		  
	<!-- RouteModel impex converter mapping to route prefix -->
	<bean id="routeConverterMapping"
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		  p:mapping="route"
		  p:converter-ref="routeConverter"/>
	
	<!-- FlightModel impex converter mapping to flight prefix -->
	<bean id="flightConverterMapping"
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		  p:mapping="flight"
		  p:converter-ref="flightConverter"/>
		  
	<!-- PassengerModel impex converter mapping to passenger prefix -->
	<bean id="passengerConverterMapping"
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		  p:mapping="passenger"
		  p:converter-ref="passengerConverter"/>
		 
	<!-- BookingModel impex converter mapping to booking prefix -->
	<bean id="bookingConverterMapping"
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"
		  p:mapping="booking"
		  p:converter-ref="bookingConverter"/>	  
		  
		  
	
</beans>
